#!/bin/sh

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
project_name=""
project_file=""
project_type="widget"
variant_name="awesome"
verbose=0



while getopts "h?vfn:" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    v)  verbose=1
        ;;
    f)  project_file=$OPTARG
        ;;
    n)  project_name=$OPTARG
        ;;
    n)  project_type=$OPTARG
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

if [ $project_name != "" ] then
    if [ $project_file == "" ] then
        project_file="$project_name.lua"
    fi
    echo "verbose=$verbose, project_name='$project_name', project_file='$project_file', Leftovers: $@"
    mkdir -p etc/xdg/$variant_name/$project_name/$project_file
    mkdir -p "usr/share/doc/$variant_name-$project_name-$project_type"
    cp /etc/xdg/awesome/rc.lua.example "etc/xdg/$variant_name/rc.lua.$project_name.example"
    echo " $variant_name-$project_name-$project_type
=========================================
A $project_type for awesomewm called $project_name

    " > usr/share/doc/README.md
    cp usr/share/doc/README.md README.md
fi

# End of file

echo "#! /bin/sh
# Configure your paths and filenames
SOURCEBINPATH=.
SOURCEDIR=$project_name
SOURCEBIN=$project_file
SOURCELOC=$project_name/$project_file
SOURCEDOC=README.md
DEBFOLDER=$variant_name-$project_name-$project_type
DEBVERSION=$(date +%Y%m%d)
cd $DEBFOLDER
git pull origin master
DEBFOLDERNAME="../$DEBFOLDER-$DEBVERSION"
DEBPACKAGENAME=$DEBFOLDER\_$DEBVERSION
rm -rf $DEBFOLDERNAME
# Create your scripts source dir
mkdir $DEBFOLDERNAME
# Copy your script to the source dir
cp -R $SOURCEBINPATH/ $DEBFOLDERNAME/
cd $DEBFOLDERNAME
pwd
# Create the packaging skeleton (debian/*)
dh_make -s --indep --createorig 
mkdir -p debian/tmp/usr
cp -R usr debian/tmp/usr
# Remove make calls
grep -v makefile debian/rules > debian/rules.new 
mv debian/rules.new debian/rules 
# debian/install must contain the list of scripts to install 
# as well as the target directory
echo etc/xdg/awesome/rc.lua.\$SOURCEDIR.example etc/xdg/awesome > debian/install
echo etc/xdg/awesome/\$SOURCELOC etc/xdg/awesome/\$SOURCEDIR >> debian/install
echo usr/share/doc/\$DEBFOLDER/\$SOURCEDOC usr/share/doc/\$DEBFOLDER >> debian/install

echo \"Source: \$DEBFOLDER
Section: unknown
Priority: optional
Maintainer: cmotc <cmotc@openmailbox.org>
Build-Depends: debhelper (>= 9)
Standards-Version: 3.9.5
Homepage: https://www.github.com/awesome-conky-hud
#Vcs-Git: git@github.com:cmotc/awesome-conky-hud
#Vcs-Browser: https://www.github.com/cmotc/awesome-conky-hud

Package: \$DEBFOLDER
Architecture: all
Depends: lightdm, lightdm-gtk-greeter, awesome (>= 3.4), conky, awesome-conky-starter, \${misc:Depends}
Description: A modified version of the debian rc.lua which starts conky, and
 a script which makes sure awesomewm only starts it once.
\" > debian/control

#echo \"gsettings set org.gnome.desktop.session session-name awesome-gnome
#dconf write /org/gnome/settings-daemon/plugins/cursor/active false
#gconftool-2 --type bool --set /apps/gnome_settings_daemon/plugins/background/active false
#\" > debian/postinst
# Remove the example files
rm debian/*.ex
rm debian/*.EX

# Build the package.
# You  will get a lot of warnings and ../somescripts_0.1-1_i386.deb
debuild -us -uc >> ../log"
